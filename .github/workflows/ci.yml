name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        custom-hash-map: [ OFF, ON ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Set compiler variables
        id: set-compiler
        shell: bash
        run: |
          if [[ "${{ runner.os }}" != "Windows" ]]; then
            echo "CC=clang" >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          fi
      - name: "Run tests"
        shell: bash
        run: |
          mkdir build
          cmake --version
          if [[ "${{ runner.os }}" != "Windows" ]]; then
            ${{ env.CC }} --version
            ${{ env.CXX }} --version
          fi
          cd build
          cmake -G Ninja .. -DUSE_CUSTOM_HASHMAP=${{ matrix.custom-hash-map }}
          cmake --build . --parallel
          ctest

  build-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y lcov gcc g++ llvm
      - name: Run tests with coverage options
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_CXX_FLAGS="-fprofile-arcs -ftest-coverage" -DCMAKE_C_FLAGS="-fprofile-arcs -ftest-coverage"
          cmake --build . --parallel $(nproc)
          ctest
          mkdir coverage
          cd coverage
          lcov --directory ../ -c -o coverage-raw.info --ignore-errors mismatch --rc geninfo_unexecuted_blocks=1
          lcov --remove coverage-raw.info "/usr/*" "*/deps/*" "*/test/*" -o coverage.info --ignore-errors mismatch
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./build/coverage
          fail_ci_if_error: false

  build-clang:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tag: [ 16, 17, 18 ]
        custom-hash-map: [ OFF, ON ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Install Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: ${{ matrix.tag }}
      - name: Set environment variables
        run: |
          echo "CC=clang-${{ matrix.tag }}" >> $GITHUB_ENV
          echo "CXX=clang++-${{ matrix.tag }}" >> $GITHUB_ENV
      - name: "Run tests"
        run: |
          mkdir build
          cmake --version
          ${{ env.CC }} --version
          ${{ env.CXX }} --version
          cd build
          cmake .. -DUSE_CUSTOM_HASHMAP=${{ matrix.custom-hash-map }}
          cmake --build . -- -j$(nproc)
          ctest
        shell: bash

  build-gcc:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tag: [ 9, 10, 11, 12, 13, 14 ]
        custom-hash-map: [ OFF, ON ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Setup GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: ${{ matrix.tag }}
      - name: Set environment variables
        run: |
          echo "CC=gcc-${{ matrix.tag }}" >> $GITHUB_ENV
          echo "CXX=g++-${{ matrix.tag }}" >> $GITHUB_ENV
      - name: "Run tests"
        run: |
          mkdir build
          cmake --version
          ${{ env.CC }} --version
          ${{ env.CXX }} --version
          cd build
          cmake .. -DUSE_CUSTOM_HASHMAP=${{ matrix.custom-hash-map }}
          cmake --build . -- -j$(nproc)
          ctest
        shell: bash